Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    DEC
    DO
    ELIF
    ELSE
    EQUIV
    GEQ
    GT
    IF
    INC
    LEQ
    LSQBRACKET
    LT
    OR
    RSQBRACKET
    WHILE

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> Corpo
Rule 2     Programa -> Decls Corpo
Rule 3     Corpo -> Proc
Rule 4     Corpo -> Corpo Proc
Rule 5     Decls -> Decl
Rule 6     Decls -> Decls Decl
Rule 7     Decl -> INTDec ID
Rule 8     Decl -> INTDec ID ATRIB NUM
Rule 9     Decl -> INTDec ID ATRIB Input
Rule 10    Input -> INPUT LCPARENT String RCPARENT
Rule 11    Corpo -> Expr
Rule 12    Corpo -> Corpo Expr
Rule 13    Expr -> NUM
Rule 14    Expr -> Expr SUM Expr
Rule 15    Expr -> Expr SUB Expr
Rule 16    Expr -> Expr MULT Expr
Rule 17    Expr -> Expr DIV Expr
Rule 18    Expr -> Expr MOD Expr
Rule 19    Proc -> Print
Rule 20    Print -> NonFormatted
Rule 21    NonFormatted -> PRINT LCPARENT Argument RCPARENT
Rule 22    Argument -> String
Rule 23    Argument -> Var
Rule 24    Var -> ID
Rule 25    String -> QUOTE STRING QUOTE
Rule 26    String -> <empty>

Terminals, with rules where they appear

AND                  : 
ATRIB                : 8 9
DEC                  : 
DIV                  : 17
DO                   : 
ELIF                 : 
ELSE                 : 
EQUIV                : 
GEQ                  : 
GT                   : 
ID                   : 7 8 9 24
IF                   : 
INC                  : 
INPUT                : 10
INTDec               : 7 8 9
LCPARENT             : 10 21
LEQ                  : 
LSQBRACKET           : 
LT                   : 
MOD                  : 18
MULT                 : 16
NUM                  : 8 13
OR                   : 
PRINT                : 21
QUOTE                : 25 25
RCPARENT             : 10 21
RSQBRACKET           : 
STRING               : 25
SUB                  : 15
SUM                  : 14
WHILE                : 
error                : 

Nonterminals, with rules where they appear

Argument             : 21
Corpo                : 1 2 4 12
Decl                 : 5 6
Decls                : 2 6
Expr                 : 11 12 14 14 15 15 16 16 17 17 18 18
Input                : 9
NonFormatted         : 20
Print                : 19
Proc                 : 3 4
Programa             : 0
String               : 10 22
Var                  : 23

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . Corpo
    (2) Programa -> . Decls Corpo
    (3) Corpo -> . Proc
    (4) Corpo -> . Corpo Proc
    (11) Corpo -> . Expr
    (12) Corpo -> . Corpo Expr
    (5) Decls -> . Decl
    (6) Decls -> . Decls Decl
    (19) Proc -> . Print
    (13) Expr -> . NUM
    (14) Expr -> . Expr SUM Expr
    (15) Expr -> . Expr SUB Expr
    (16) Expr -> . Expr MULT Expr
    (17) Expr -> . Expr DIV Expr
    (18) Expr -> . Expr MOD Expr
    (7) Decl -> . INTDec ID
    (8) Decl -> . INTDec ID ATRIB NUM
    (9) Decl -> . INTDec ID ATRIB Input
    (20) Print -> . NonFormatted
    (21) NonFormatted -> . PRINT LCPARENT Argument RCPARENT

    NUM             shift and go to state 8
    INTDec          shift and go to state 9
    PRINT           shift and go to state 11

    Programa                       shift and go to state 1
    Corpo                          shift and go to state 2
    Decls                          shift and go to state 3
    Proc                           shift and go to state 4
    Expr                           shift and go to state 5
    Decl                           shift and go to state 6
    Print                          shift and go to state 7
    NonFormatted                   shift and go to state 10

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> Corpo .
    (4) Corpo -> Corpo . Proc
    (12) Corpo -> Corpo . Expr
    (19) Proc -> . Print
    (13) Expr -> . NUM
    (14) Expr -> . Expr SUM Expr
    (15) Expr -> . Expr SUB Expr
    (16) Expr -> . Expr MULT Expr
    (17) Expr -> . Expr DIV Expr
    (18) Expr -> . Expr MOD Expr
    (20) Print -> . NonFormatted
    (21) NonFormatted -> . PRINT LCPARENT Argument RCPARENT

    $end            reduce using rule 1 (Programa -> Corpo .)
    NUM             shift and go to state 8
    PRINT           shift and go to state 11

    Proc                           shift and go to state 12
    Expr                           shift and go to state 13
    Print                          shift and go to state 7
    NonFormatted                   shift and go to state 10

state 3

    (2) Programa -> Decls . Corpo
    (6) Decls -> Decls . Decl
    (3) Corpo -> . Proc
    (4) Corpo -> . Corpo Proc
    (11) Corpo -> . Expr
    (12) Corpo -> . Corpo Expr
    (7) Decl -> . INTDec ID
    (8) Decl -> . INTDec ID ATRIB NUM
    (9) Decl -> . INTDec ID ATRIB Input
    (19) Proc -> . Print
    (13) Expr -> . NUM
    (14) Expr -> . Expr SUM Expr
    (15) Expr -> . Expr SUB Expr
    (16) Expr -> . Expr MULT Expr
    (17) Expr -> . Expr DIV Expr
    (18) Expr -> . Expr MOD Expr
    (20) Print -> . NonFormatted
    (21) NonFormatted -> . PRINT LCPARENT Argument RCPARENT

    INTDec          shift and go to state 9
    NUM             shift and go to state 8
    PRINT           shift and go to state 11

    Corpo                          shift and go to state 14
    Decl                           shift and go to state 15
    Proc                           shift and go to state 4
    Expr                           shift and go to state 5
    Print                          shift and go to state 7
    NonFormatted                   shift and go to state 10

state 4

    (3) Corpo -> Proc .

    NUM             reduce using rule 3 (Corpo -> Proc .)
    PRINT           reduce using rule 3 (Corpo -> Proc .)
    $end            reduce using rule 3 (Corpo -> Proc .)


state 5

    (11) Corpo -> Expr .
    (14) Expr -> Expr . SUM Expr
    (15) Expr -> Expr . SUB Expr
    (16) Expr -> Expr . MULT Expr
    (17) Expr -> Expr . DIV Expr
    (18) Expr -> Expr . MOD Expr

    NUM             reduce using rule 11 (Corpo -> Expr .)
    PRINT           reduce using rule 11 (Corpo -> Expr .)
    $end            reduce using rule 11 (Corpo -> Expr .)
    SUM             shift and go to state 16
    SUB             shift and go to state 17
    MULT            shift and go to state 18
    DIV             shift and go to state 19
    MOD             shift and go to state 20


state 6

    (5) Decls -> Decl .

    INTDec          reduce using rule 5 (Decls -> Decl .)
    NUM             reduce using rule 5 (Decls -> Decl .)
    PRINT           reduce using rule 5 (Decls -> Decl .)


state 7

    (19) Proc -> Print .

    NUM             reduce using rule 19 (Proc -> Print .)
    PRINT           reduce using rule 19 (Proc -> Print .)
    $end            reduce using rule 19 (Proc -> Print .)


state 8

    (13) Expr -> NUM .

    SUM             reduce using rule 13 (Expr -> NUM .)
    SUB             reduce using rule 13 (Expr -> NUM .)
    MULT            reduce using rule 13 (Expr -> NUM .)
    DIV             reduce using rule 13 (Expr -> NUM .)
    MOD             reduce using rule 13 (Expr -> NUM .)
    NUM             reduce using rule 13 (Expr -> NUM .)
    PRINT           reduce using rule 13 (Expr -> NUM .)
    $end            reduce using rule 13 (Expr -> NUM .)


state 9

    (7) Decl -> INTDec . ID
    (8) Decl -> INTDec . ID ATRIB NUM
    (9) Decl -> INTDec . ID ATRIB Input

    ID              shift and go to state 21


state 10

    (20) Print -> NonFormatted .

    NUM             reduce using rule 20 (Print -> NonFormatted .)
    PRINT           reduce using rule 20 (Print -> NonFormatted .)
    $end            reduce using rule 20 (Print -> NonFormatted .)


state 11

    (21) NonFormatted -> PRINT . LCPARENT Argument RCPARENT

    LCPARENT        shift and go to state 22


state 12

    (4) Corpo -> Corpo Proc .

    NUM             reduce using rule 4 (Corpo -> Corpo Proc .)
    PRINT           reduce using rule 4 (Corpo -> Corpo Proc .)
    $end            reduce using rule 4 (Corpo -> Corpo Proc .)


state 13

    (12) Corpo -> Corpo Expr .
    (14) Expr -> Expr . SUM Expr
    (15) Expr -> Expr . SUB Expr
    (16) Expr -> Expr . MULT Expr
    (17) Expr -> Expr . DIV Expr
    (18) Expr -> Expr . MOD Expr

    NUM             reduce using rule 12 (Corpo -> Corpo Expr .)
    PRINT           reduce using rule 12 (Corpo -> Corpo Expr .)
    $end            reduce using rule 12 (Corpo -> Corpo Expr .)
    SUM             shift and go to state 16
    SUB             shift and go to state 17
    MULT            shift and go to state 18
    DIV             shift and go to state 19
    MOD             shift and go to state 20


state 14

    (2) Programa -> Decls Corpo .
    (4) Corpo -> Corpo . Proc
    (12) Corpo -> Corpo . Expr
    (19) Proc -> . Print
    (13) Expr -> . NUM
    (14) Expr -> . Expr SUM Expr
    (15) Expr -> . Expr SUB Expr
    (16) Expr -> . Expr MULT Expr
    (17) Expr -> . Expr DIV Expr
    (18) Expr -> . Expr MOD Expr
    (20) Print -> . NonFormatted
    (21) NonFormatted -> . PRINT LCPARENT Argument RCPARENT

    $end            reduce using rule 2 (Programa -> Decls Corpo .)
    NUM             shift and go to state 8
    PRINT           shift and go to state 11

    Proc                           shift and go to state 12
    Expr                           shift and go to state 13
    Print                          shift and go to state 7
    NonFormatted                   shift and go to state 10

state 15

    (6) Decls -> Decls Decl .

    INTDec          reduce using rule 6 (Decls -> Decls Decl .)
    NUM             reduce using rule 6 (Decls -> Decls Decl .)
    PRINT           reduce using rule 6 (Decls -> Decls Decl .)


state 16

    (14) Expr -> Expr SUM . Expr
    (13) Expr -> . NUM
    (14) Expr -> . Expr SUM Expr
    (15) Expr -> . Expr SUB Expr
    (16) Expr -> . Expr MULT Expr
    (17) Expr -> . Expr DIV Expr
    (18) Expr -> . Expr MOD Expr

    NUM             shift and go to state 8

    Expr                           shift and go to state 23

state 17

    (15) Expr -> Expr SUB . Expr
    (13) Expr -> . NUM
    (14) Expr -> . Expr SUM Expr
    (15) Expr -> . Expr SUB Expr
    (16) Expr -> . Expr MULT Expr
    (17) Expr -> . Expr DIV Expr
    (18) Expr -> . Expr MOD Expr

    NUM             shift and go to state 8

    Expr                           shift and go to state 24

state 18

    (16) Expr -> Expr MULT . Expr
    (13) Expr -> . NUM
    (14) Expr -> . Expr SUM Expr
    (15) Expr -> . Expr SUB Expr
    (16) Expr -> . Expr MULT Expr
    (17) Expr -> . Expr DIV Expr
    (18) Expr -> . Expr MOD Expr

    NUM             shift and go to state 8

    Expr                           shift and go to state 25

state 19

    (17) Expr -> Expr DIV . Expr
    (13) Expr -> . NUM
    (14) Expr -> . Expr SUM Expr
    (15) Expr -> . Expr SUB Expr
    (16) Expr -> . Expr MULT Expr
    (17) Expr -> . Expr DIV Expr
    (18) Expr -> . Expr MOD Expr

    NUM             shift and go to state 8

    Expr                           shift and go to state 26

state 20

    (18) Expr -> Expr MOD . Expr
    (13) Expr -> . NUM
    (14) Expr -> . Expr SUM Expr
    (15) Expr -> . Expr SUB Expr
    (16) Expr -> . Expr MULT Expr
    (17) Expr -> . Expr DIV Expr
    (18) Expr -> . Expr MOD Expr

    NUM             shift and go to state 8

    Expr                           shift and go to state 27

state 21

    (7) Decl -> INTDec ID .
    (8) Decl -> INTDec ID . ATRIB NUM
    (9) Decl -> INTDec ID . ATRIB Input

    INTDec          reduce using rule 7 (Decl -> INTDec ID .)
    NUM             reduce using rule 7 (Decl -> INTDec ID .)
    PRINT           reduce using rule 7 (Decl -> INTDec ID .)
    ATRIB           shift and go to state 28


state 22

    (21) NonFormatted -> PRINT LCPARENT . Argument RCPARENT
    (22) Argument -> . String
    (23) Argument -> . Var
    (25) String -> . QUOTE STRING QUOTE
    (26) String -> .
    (24) Var -> . ID

    QUOTE           shift and go to state 32
    RCPARENT        reduce using rule 26 (String -> .)
    ID              shift and go to state 33

    Argument                       shift and go to state 29
    String                         shift and go to state 30
    Var                            shift and go to state 31

state 23

    (14) Expr -> Expr SUM Expr .
    (14) Expr -> Expr . SUM Expr
    (15) Expr -> Expr . SUB Expr
    (16) Expr -> Expr . MULT Expr
    (17) Expr -> Expr . DIV Expr
    (18) Expr -> Expr . MOD Expr

    SUM             reduce using rule 14 (Expr -> Expr SUM Expr .)
    SUB             reduce using rule 14 (Expr -> Expr SUM Expr .)
    MOD             reduce using rule 14 (Expr -> Expr SUM Expr .)
    NUM             reduce using rule 14 (Expr -> Expr SUM Expr .)
    PRINT           reduce using rule 14 (Expr -> Expr SUM Expr .)
    $end            reduce using rule 14 (Expr -> Expr SUM Expr .)
    MULT            shift and go to state 18
    DIV             shift and go to state 19

  ! MULT            [ reduce using rule 14 (Expr -> Expr SUM Expr .) ]
  ! DIV             [ reduce using rule 14 (Expr -> Expr SUM Expr .) ]
  ! SUM             [ shift and go to state 16 ]
  ! SUB             [ shift and go to state 17 ]
  ! MOD             [ shift and go to state 20 ]


state 24

    (15) Expr -> Expr SUB Expr .
    (14) Expr -> Expr . SUM Expr
    (15) Expr -> Expr . SUB Expr
    (16) Expr -> Expr . MULT Expr
    (17) Expr -> Expr . DIV Expr
    (18) Expr -> Expr . MOD Expr

    SUM             reduce using rule 15 (Expr -> Expr SUB Expr .)
    SUB             reduce using rule 15 (Expr -> Expr SUB Expr .)
    MOD             reduce using rule 15 (Expr -> Expr SUB Expr .)
    NUM             reduce using rule 15 (Expr -> Expr SUB Expr .)
    PRINT           reduce using rule 15 (Expr -> Expr SUB Expr .)
    $end            reduce using rule 15 (Expr -> Expr SUB Expr .)
    MULT            shift and go to state 18
    DIV             shift and go to state 19

  ! MULT            [ reduce using rule 15 (Expr -> Expr SUB Expr .) ]
  ! DIV             [ reduce using rule 15 (Expr -> Expr SUB Expr .) ]
  ! SUM             [ shift and go to state 16 ]
  ! SUB             [ shift and go to state 17 ]
  ! MOD             [ shift and go to state 20 ]


state 25

    (16) Expr -> Expr MULT Expr .
    (14) Expr -> Expr . SUM Expr
    (15) Expr -> Expr . SUB Expr
    (16) Expr -> Expr . MULT Expr
    (17) Expr -> Expr . DIV Expr
    (18) Expr -> Expr . MOD Expr

    SUM             reduce using rule 16 (Expr -> Expr MULT Expr .)
    SUB             reduce using rule 16 (Expr -> Expr MULT Expr .)
    MULT            reduce using rule 16 (Expr -> Expr MULT Expr .)
    DIV             reduce using rule 16 (Expr -> Expr MULT Expr .)
    MOD             reduce using rule 16 (Expr -> Expr MULT Expr .)
    NUM             reduce using rule 16 (Expr -> Expr MULT Expr .)
    PRINT           reduce using rule 16 (Expr -> Expr MULT Expr .)
    $end            reduce using rule 16 (Expr -> Expr MULT Expr .)

  ! SUM             [ shift and go to state 16 ]
  ! SUB             [ shift and go to state 17 ]
  ! MULT            [ shift and go to state 18 ]
  ! DIV             [ shift and go to state 19 ]
  ! MOD             [ shift and go to state 20 ]


state 26

    (17) Expr -> Expr DIV Expr .
    (14) Expr -> Expr . SUM Expr
    (15) Expr -> Expr . SUB Expr
    (16) Expr -> Expr . MULT Expr
    (17) Expr -> Expr . DIV Expr
    (18) Expr -> Expr . MOD Expr

    SUM             reduce using rule 17 (Expr -> Expr DIV Expr .)
    SUB             reduce using rule 17 (Expr -> Expr DIV Expr .)
    MULT            reduce using rule 17 (Expr -> Expr DIV Expr .)
    DIV             reduce using rule 17 (Expr -> Expr DIV Expr .)
    MOD             reduce using rule 17 (Expr -> Expr DIV Expr .)
    NUM             reduce using rule 17 (Expr -> Expr DIV Expr .)
    PRINT           reduce using rule 17 (Expr -> Expr DIV Expr .)
    $end            reduce using rule 17 (Expr -> Expr DIV Expr .)

  ! SUM             [ shift and go to state 16 ]
  ! SUB             [ shift and go to state 17 ]
  ! MULT            [ shift and go to state 18 ]
  ! DIV             [ shift and go to state 19 ]
  ! MOD             [ shift and go to state 20 ]


state 27

    (18) Expr -> Expr MOD Expr .
    (14) Expr -> Expr . SUM Expr
    (15) Expr -> Expr . SUB Expr
    (16) Expr -> Expr . MULT Expr
    (17) Expr -> Expr . DIV Expr
    (18) Expr -> Expr . MOD Expr

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    NUM             reduce using rule 18 (Expr -> Expr MOD Expr .)
    PRINT           reduce using rule 18 (Expr -> Expr MOD Expr .)
    $end            reduce using rule 18 (Expr -> Expr MOD Expr .)
    SUM             shift and go to state 16
    SUB             shift and go to state 17
    MULT            shift and go to state 18
    DIV             shift and go to state 19
    MOD             shift and go to state 20

  ! SUM             [ reduce using rule 18 (Expr -> Expr MOD Expr .) ]
  ! SUB             [ reduce using rule 18 (Expr -> Expr MOD Expr .) ]
  ! MULT            [ reduce using rule 18 (Expr -> Expr MOD Expr .) ]
  ! DIV             [ reduce using rule 18 (Expr -> Expr MOD Expr .) ]
  ! MOD             [ reduce using rule 18 (Expr -> Expr MOD Expr .) ]


state 28

    (8) Decl -> INTDec ID ATRIB . NUM
    (9) Decl -> INTDec ID ATRIB . Input
    (10) Input -> . INPUT LCPARENT String RCPARENT

    NUM             shift and go to state 34
    INPUT           shift and go to state 36

    Input                          shift and go to state 35

state 29

    (21) NonFormatted -> PRINT LCPARENT Argument . RCPARENT

    RCPARENT        shift and go to state 37


state 30

    (22) Argument -> String .

    RCPARENT        reduce using rule 22 (Argument -> String .)


state 31

    (23) Argument -> Var .

    RCPARENT        reduce using rule 23 (Argument -> Var .)


state 32

    (25) String -> QUOTE . STRING QUOTE

    STRING          shift and go to state 38


state 33

    (24) Var -> ID .

    RCPARENT        reduce using rule 24 (Var -> ID .)


state 34

    (8) Decl -> INTDec ID ATRIB NUM .

    INTDec          reduce using rule 8 (Decl -> INTDec ID ATRIB NUM .)
    NUM             reduce using rule 8 (Decl -> INTDec ID ATRIB NUM .)
    PRINT           reduce using rule 8 (Decl -> INTDec ID ATRIB NUM .)


state 35

    (9) Decl -> INTDec ID ATRIB Input .

    INTDec          reduce using rule 9 (Decl -> INTDec ID ATRIB Input .)
    NUM             reduce using rule 9 (Decl -> INTDec ID ATRIB Input .)
    PRINT           reduce using rule 9 (Decl -> INTDec ID ATRIB Input .)


state 36

    (10) Input -> INPUT . LCPARENT String RCPARENT

    LCPARENT        shift and go to state 39


state 37

    (21) NonFormatted -> PRINT LCPARENT Argument RCPARENT .

    NUM             reduce using rule 21 (NonFormatted -> PRINT LCPARENT Argument RCPARENT .)
    PRINT           reduce using rule 21 (NonFormatted -> PRINT LCPARENT Argument RCPARENT .)
    $end            reduce using rule 21 (NonFormatted -> PRINT LCPARENT Argument RCPARENT .)


state 38

    (25) String -> QUOTE STRING . QUOTE

    QUOTE           shift and go to state 40


state 39

    (10) Input -> INPUT LCPARENT . String RCPARENT
    (25) String -> . QUOTE STRING QUOTE
    (26) String -> .

    QUOTE           shift and go to state 32
    RCPARENT        reduce using rule 26 (String -> .)

    String                         shift and go to state 41

state 40

    (25) String -> QUOTE STRING QUOTE .

    RCPARENT        reduce using rule 25 (String -> QUOTE STRING QUOTE .)


state 41

    (10) Input -> INPUT LCPARENT String . RCPARENT

    RCPARENT        shift and go to state 42


state 42

    (10) Input -> INPUT LCPARENT String RCPARENT .

    INTDec          reduce using rule 10 (Input -> INPUT LCPARENT String RCPARENT .)
    NUM             reduce using rule 10 (Input -> INPUT LCPARENT String RCPARENT .)
    PRINT           reduce using rule 10 (Input -> INPUT LCPARENT String RCPARENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 27 resolved as shift
WARNING: shift/reduce conflict for SUB in state 27 resolved as shift
WARNING: shift/reduce conflict for MULT in state 27 resolved as shift
WARNING: shift/reduce conflict for DIV in state 27 resolved as shift
WARNING: shift/reduce conflict for MOD in state 27 resolved as shift
