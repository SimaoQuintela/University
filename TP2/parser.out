Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COLON
    DEDENT
    DO
    ELIF
    ELSE
    EQUIV
    GEQ
    GT
    IF
    INDENT
    LEQ
    LSQBRACKET
    LT
    OR
    RSQBRACKET
    WHILE
    WS

Grammar

Rule 0     S' -> ProgramaInit
Rule 1     ProgramaInit -> Programa ENDMARKER
Rule 2     Programa -> Corpo
Rule 3     Programa -> Decls Corpo
Rule 4     Corpo -> Proc Newline
Rule 5     Corpo -> Corpo Proc Newline
Rule 6     Decls -> Decl Newline
Rule 7     Decls -> Decls Decl Newline
Rule 8     Newline -> <empty>
Rule 9     Newline -> NEWLINE
Rule 10    Decl -> INTDec ID
Rule 11    Decl -> INTDec ID ATRIB NUM
Rule 12    Decl -> INTDec ID ATRIB Input
Rule 13    Input -> INPUT LCPARENT String RCPARENT
Rule 14    Expr -> Var
Rule 15    Expr -> NUM
Rule 16    Expr -> Expr SUM Expr
Rule 17    Expr -> Expr SUB Expr
Rule 18    Expr -> Expr MULT Expr
Rule 19    Expr -> Expr DIV Expr
Rule 20    Expr -> Expr MOD Expr
Rule 21    Expr -> ID INC
Rule 22    Expr -> ID DEC
Rule 23    Proc -> Print
Rule 24    Print -> NonFormatted
Rule 25    NonFormatted -> PRINT LCPARENT Argument RCPARENT
Rule 26    Argument -> String
Rule 27    Argument -> Var
Rule 28    Argument -> Expr
Rule 29    Var -> ID
Rule 30    String -> QUOTE STRING QUOTE
Rule 31    String -> <empty>

Terminals, with rules where they appear

AND                  : 
ATRIB                : 11 12
COLON                : 
DEC                  : 22
DEDENT               : 
DIV                  : 19
DO                   : 
ELIF                 : 
ELSE                 : 
ENDMARKER            : 1
EQUIV                : 
GEQ                  : 
GT                   : 
ID                   : 10 11 12 21 22 29
IF                   : 
INC                  : 21
INDENT               : 
INPUT                : 13
INTDec               : 10 11 12
LCPARENT             : 13 25
LEQ                  : 
LSQBRACKET           : 
LT                   : 
MOD                  : 20
MULT                 : 18
NEWLINE              : 9
NUM                  : 11 15
OR                   : 
PRINT                : 25
QUOTE                : 30 30
RCPARENT             : 13 25
RSQBRACKET           : 
STRING               : 30
SUB                  : 17
SUM                  : 16
WHILE                : 
WS                   : 
error                : 

Nonterminals, with rules where they appear

Argument             : 25
Corpo                : 2 3 5
Decl                 : 6 7
Decls                : 3 7
Expr                 : 16 16 17 17 18 18 19 19 20 20 28
Input                : 12
Newline              : 4 5 6 7
NonFormatted         : 24
Print                : 23
Proc                 : 4 5
Programa             : 1
ProgramaInit         : 0
String               : 13 26
Var                  : 14 27

Parsing method: LALR

state 0

    (0) S' -> . ProgramaInit
    (1) ProgramaInit -> . Programa ENDMARKER
    (2) Programa -> . Corpo
    (3) Programa -> . Decls Corpo
    (4) Corpo -> . Proc Newline
    (5) Corpo -> . Corpo Proc Newline
    (6) Decls -> . Decl Newline
    (7) Decls -> . Decls Decl Newline
    (23) Proc -> . Print
    (10) Decl -> . INTDec ID
    (11) Decl -> . INTDec ID ATRIB NUM
    (12) Decl -> . INTDec ID ATRIB Input
    (24) Print -> . NonFormatted
    (25) NonFormatted -> . PRINT LCPARENT Argument RCPARENT

    INTDec          shift and go to state 8
    PRINT           shift and go to state 10

    ProgramaInit                   shift and go to state 1
    Programa                       shift and go to state 2
    Corpo                          shift and go to state 3
    Decls                          shift and go to state 4
    Proc                           shift and go to state 5
    Decl                           shift and go to state 6
    Print                          shift and go to state 7
    NonFormatted                   shift and go to state 9

state 1

    (0) S' -> ProgramaInit .



state 2

    (1) ProgramaInit -> Programa . ENDMARKER

    ENDMARKER       shift and go to state 11


state 3

    (2) Programa -> Corpo .
    (5) Corpo -> Corpo . Proc Newline
    (23) Proc -> . Print
    (24) Print -> . NonFormatted
    (25) NonFormatted -> . PRINT LCPARENT Argument RCPARENT

    ENDMARKER       reduce using rule 2 (Programa -> Corpo .)
    PRINT           shift and go to state 10

    Proc                           shift and go to state 12
    Print                          shift and go to state 7
    NonFormatted                   shift and go to state 9

state 4

    (3) Programa -> Decls . Corpo
    (7) Decls -> Decls . Decl Newline
    (4) Corpo -> . Proc Newline
    (5) Corpo -> . Corpo Proc Newline
    (10) Decl -> . INTDec ID
    (11) Decl -> . INTDec ID ATRIB NUM
    (12) Decl -> . INTDec ID ATRIB Input
    (23) Proc -> . Print
    (24) Print -> . NonFormatted
    (25) NonFormatted -> . PRINT LCPARENT Argument RCPARENT

    INTDec          shift and go to state 8
    PRINT           shift and go to state 10

    Corpo                          shift and go to state 13
    Decl                           shift and go to state 14
    Proc                           shift and go to state 5
    Print                          shift and go to state 7
    NonFormatted                   shift and go to state 9

state 5

    (4) Corpo -> Proc . Newline
    (8) Newline -> .
    (9) Newline -> . NEWLINE

    PRINT           reduce using rule 8 (Newline -> .)
    ENDMARKER       reduce using rule 8 (Newline -> .)
    NEWLINE         shift and go to state 16

    Newline                        shift and go to state 15

state 6

    (6) Decls -> Decl . Newline
    (8) Newline -> .
    (9) Newline -> . NEWLINE

    INTDec          reduce using rule 8 (Newline -> .)
    PRINT           reduce using rule 8 (Newline -> .)
    NEWLINE         shift and go to state 16

    Newline                        shift and go to state 17

state 7

    (23) Proc -> Print .

    NEWLINE         reduce using rule 23 (Proc -> Print .)
    PRINT           reduce using rule 23 (Proc -> Print .)
    ENDMARKER       reduce using rule 23 (Proc -> Print .)


state 8

    (10) Decl -> INTDec . ID
    (11) Decl -> INTDec . ID ATRIB NUM
    (12) Decl -> INTDec . ID ATRIB Input

    ID              shift and go to state 18


state 9

    (24) Print -> NonFormatted .

    NEWLINE         reduce using rule 24 (Print -> NonFormatted .)
    PRINT           reduce using rule 24 (Print -> NonFormatted .)
    ENDMARKER       reduce using rule 24 (Print -> NonFormatted .)


state 10

    (25) NonFormatted -> PRINT . LCPARENT Argument RCPARENT

    LCPARENT        shift and go to state 19


state 11

    (1) ProgramaInit -> Programa ENDMARKER .

    $end            reduce using rule 1 (ProgramaInit -> Programa ENDMARKER .)


state 12

    (5) Corpo -> Corpo Proc . Newline
    (8) Newline -> .
    (9) Newline -> . NEWLINE

    PRINT           reduce using rule 8 (Newline -> .)
    ENDMARKER       reduce using rule 8 (Newline -> .)
    NEWLINE         shift and go to state 16

    Newline                        shift and go to state 20

state 13

    (3) Programa -> Decls Corpo .
    (5) Corpo -> Corpo . Proc Newline
    (23) Proc -> . Print
    (24) Print -> . NonFormatted
    (25) NonFormatted -> . PRINT LCPARENT Argument RCPARENT

    ENDMARKER       reduce using rule 3 (Programa -> Decls Corpo .)
    PRINT           shift and go to state 10

    Proc                           shift and go to state 12
    Print                          shift and go to state 7
    NonFormatted                   shift and go to state 9

state 14

    (7) Decls -> Decls Decl . Newline
    (8) Newline -> .
    (9) Newline -> . NEWLINE

    INTDec          reduce using rule 8 (Newline -> .)
    PRINT           reduce using rule 8 (Newline -> .)
    NEWLINE         shift and go to state 16

    Newline                        shift and go to state 21

state 15

    (4) Corpo -> Proc Newline .

    PRINT           reduce using rule 4 (Corpo -> Proc Newline .)
    ENDMARKER       reduce using rule 4 (Corpo -> Proc Newline .)


state 16

    (9) Newline -> NEWLINE .

    PRINT           reduce using rule 9 (Newline -> NEWLINE .)
    ENDMARKER       reduce using rule 9 (Newline -> NEWLINE .)
    INTDec          reduce using rule 9 (Newline -> NEWLINE .)


state 17

    (6) Decls -> Decl Newline .

    INTDec          reduce using rule 6 (Decls -> Decl Newline .)
    PRINT           reduce using rule 6 (Decls -> Decl Newline .)


state 18

    (10) Decl -> INTDec ID .
    (11) Decl -> INTDec ID . ATRIB NUM
    (12) Decl -> INTDec ID . ATRIB Input

    NEWLINE         reduce using rule 10 (Decl -> INTDec ID .)
    INTDec          reduce using rule 10 (Decl -> INTDec ID .)
    PRINT           reduce using rule 10 (Decl -> INTDec ID .)
    ATRIB           shift and go to state 22


state 19

    (25) NonFormatted -> PRINT LCPARENT . Argument RCPARENT
    (26) Argument -> . String
    (27) Argument -> . Var
    (28) Argument -> . Expr
    (30) String -> . QUOTE STRING QUOTE
    (31) String -> .
    (29) Var -> . ID
    (14) Expr -> . Var
    (15) Expr -> . NUM
    (16) Expr -> . Expr SUM Expr
    (17) Expr -> . Expr SUB Expr
    (18) Expr -> . Expr MULT Expr
    (19) Expr -> . Expr DIV Expr
    (20) Expr -> . Expr MOD Expr
    (21) Expr -> . ID INC
    (22) Expr -> . ID DEC

    QUOTE           shift and go to state 27
    RCPARENT        reduce using rule 31 (String -> .)
    ID              shift and go to state 28
    NUM             shift and go to state 29

    Argument                       shift and go to state 23
    String                         shift and go to state 24
    Var                            shift and go to state 25
    Expr                           shift and go to state 26

state 20

    (5) Corpo -> Corpo Proc Newline .

    PRINT           reduce using rule 5 (Corpo -> Corpo Proc Newline .)
    ENDMARKER       reduce using rule 5 (Corpo -> Corpo Proc Newline .)


state 21

    (7) Decls -> Decls Decl Newline .

    INTDec          reduce using rule 7 (Decls -> Decls Decl Newline .)
    PRINT           reduce using rule 7 (Decls -> Decls Decl Newline .)


state 22

    (11) Decl -> INTDec ID ATRIB . NUM
    (12) Decl -> INTDec ID ATRIB . Input
    (13) Input -> . INPUT LCPARENT String RCPARENT

    NUM             shift and go to state 30
    INPUT           shift and go to state 32

    Input                          shift and go to state 31

state 23

    (25) NonFormatted -> PRINT LCPARENT Argument . RCPARENT

    RCPARENT        shift and go to state 33


state 24

    (26) Argument -> String .

    RCPARENT        reduce using rule 26 (Argument -> String .)


state 25

    (27) Argument -> Var .
    (14) Expr -> Var .

  ! reduce/reduce conflict for RCPARENT resolved using rule 14 (Expr -> Var .)
    SUM             reduce using rule 14 (Expr -> Var .)
    SUB             reduce using rule 14 (Expr -> Var .)
    MULT            reduce using rule 14 (Expr -> Var .)
    DIV             reduce using rule 14 (Expr -> Var .)
    MOD             reduce using rule 14 (Expr -> Var .)
    RCPARENT        reduce using rule 14 (Expr -> Var .)

  ! RCPARENT        [ reduce using rule 27 (Argument -> Var .) ]


state 26

    (28) Argument -> Expr .
    (16) Expr -> Expr . SUM Expr
    (17) Expr -> Expr . SUB Expr
    (18) Expr -> Expr . MULT Expr
    (19) Expr -> Expr . DIV Expr
    (20) Expr -> Expr . MOD Expr

    RCPARENT        reduce using rule 28 (Argument -> Expr .)
    SUM             shift and go to state 34
    SUB             shift and go to state 35
    MULT            shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38


state 27

    (30) String -> QUOTE . STRING QUOTE

    STRING          shift and go to state 39


state 28

    (29) Var -> ID .
    (21) Expr -> ID . INC
    (22) Expr -> ID . DEC

    RCPARENT        reduce using rule 29 (Var -> ID .)
    SUM             reduce using rule 29 (Var -> ID .)
    SUB             reduce using rule 29 (Var -> ID .)
    MULT            reduce using rule 29 (Var -> ID .)
    DIV             reduce using rule 29 (Var -> ID .)
    MOD             reduce using rule 29 (Var -> ID .)
    INC             shift and go to state 40
    DEC             shift and go to state 41


state 29

    (15) Expr -> NUM .

    SUM             reduce using rule 15 (Expr -> NUM .)
    SUB             reduce using rule 15 (Expr -> NUM .)
    MULT            reduce using rule 15 (Expr -> NUM .)
    DIV             reduce using rule 15 (Expr -> NUM .)
    MOD             reduce using rule 15 (Expr -> NUM .)
    RCPARENT        reduce using rule 15 (Expr -> NUM .)


state 30

    (11) Decl -> INTDec ID ATRIB NUM .

    NEWLINE         reduce using rule 11 (Decl -> INTDec ID ATRIB NUM .)
    INTDec          reduce using rule 11 (Decl -> INTDec ID ATRIB NUM .)
    PRINT           reduce using rule 11 (Decl -> INTDec ID ATRIB NUM .)


state 31

    (12) Decl -> INTDec ID ATRIB Input .

    NEWLINE         reduce using rule 12 (Decl -> INTDec ID ATRIB Input .)
    INTDec          reduce using rule 12 (Decl -> INTDec ID ATRIB Input .)
    PRINT           reduce using rule 12 (Decl -> INTDec ID ATRIB Input .)


state 32

    (13) Input -> INPUT . LCPARENT String RCPARENT

    LCPARENT        shift and go to state 42


state 33

    (25) NonFormatted -> PRINT LCPARENT Argument RCPARENT .

    NEWLINE         reduce using rule 25 (NonFormatted -> PRINT LCPARENT Argument RCPARENT .)
    PRINT           reduce using rule 25 (NonFormatted -> PRINT LCPARENT Argument RCPARENT .)
    ENDMARKER       reduce using rule 25 (NonFormatted -> PRINT LCPARENT Argument RCPARENT .)


state 34

    (16) Expr -> Expr SUM . Expr
    (14) Expr -> . Var
    (15) Expr -> . NUM
    (16) Expr -> . Expr SUM Expr
    (17) Expr -> . Expr SUB Expr
    (18) Expr -> . Expr MULT Expr
    (19) Expr -> . Expr DIV Expr
    (20) Expr -> . Expr MOD Expr
    (21) Expr -> . ID INC
    (22) Expr -> . ID DEC
    (29) Var -> . ID

    NUM             shift and go to state 29
    ID              shift and go to state 45

    Expr                           shift and go to state 43
    Var                            shift and go to state 44

state 35

    (17) Expr -> Expr SUB . Expr
    (14) Expr -> . Var
    (15) Expr -> . NUM
    (16) Expr -> . Expr SUM Expr
    (17) Expr -> . Expr SUB Expr
    (18) Expr -> . Expr MULT Expr
    (19) Expr -> . Expr DIV Expr
    (20) Expr -> . Expr MOD Expr
    (21) Expr -> . ID INC
    (22) Expr -> . ID DEC
    (29) Var -> . ID

    NUM             shift and go to state 29
    ID              shift and go to state 45

    Expr                           shift and go to state 46
    Var                            shift and go to state 44

state 36

    (18) Expr -> Expr MULT . Expr
    (14) Expr -> . Var
    (15) Expr -> . NUM
    (16) Expr -> . Expr SUM Expr
    (17) Expr -> . Expr SUB Expr
    (18) Expr -> . Expr MULT Expr
    (19) Expr -> . Expr DIV Expr
    (20) Expr -> . Expr MOD Expr
    (21) Expr -> . ID INC
    (22) Expr -> . ID DEC
    (29) Var -> . ID

    NUM             shift and go to state 29
    ID              shift and go to state 45

    Expr                           shift and go to state 47
    Var                            shift and go to state 44

state 37

    (19) Expr -> Expr DIV . Expr
    (14) Expr -> . Var
    (15) Expr -> . NUM
    (16) Expr -> . Expr SUM Expr
    (17) Expr -> . Expr SUB Expr
    (18) Expr -> . Expr MULT Expr
    (19) Expr -> . Expr DIV Expr
    (20) Expr -> . Expr MOD Expr
    (21) Expr -> . ID INC
    (22) Expr -> . ID DEC
    (29) Var -> . ID

    NUM             shift and go to state 29
    ID              shift and go to state 45

    Expr                           shift and go to state 48
    Var                            shift and go to state 44

state 38

    (20) Expr -> Expr MOD . Expr
    (14) Expr -> . Var
    (15) Expr -> . NUM
    (16) Expr -> . Expr SUM Expr
    (17) Expr -> . Expr SUB Expr
    (18) Expr -> . Expr MULT Expr
    (19) Expr -> . Expr DIV Expr
    (20) Expr -> . Expr MOD Expr
    (21) Expr -> . ID INC
    (22) Expr -> . ID DEC
    (29) Var -> . ID

    NUM             shift and go to state 29
    ID              shift and go to state 45

    Expr                           shift and go to state 49
    Var                            shift and go to state 44

state 39

    (30) String -> QUOTE STRING . QUOTE

    QUOTE           shift and go to state 50


state 40

    (21) Expr -> ID INC .

    SUM             reduce using rule 21 (Expr -> ID INC .)
    SUB             reduce using rule 21 (Expr -> ID INC .)
    MULT            reduce using rule 21 (Expr -> ID INC .)
    DIV             reduce using rule 21 (Expr -> ID INC .)
    MOD             reduce using rule 21 (Expr -> ID INC .)
    RCPARENT        reduce using rule 21 (Expr -> ID INC .)


state 41

    (22) Expr -> ID DEC .

    SUM             reduce using rule 22 (Expr -> ID DEC .)
    SUB             reduce using rule 22 (Expr -> ID DEC .)
    MULT            reduce using rule 22 (Expr -> ID DEC .)
    DIV             reduce using rule 22 (Expr -> ID DEC .)
    MOD             reduce using rule 22 (Expr -> ID DEC .)
    RCPARENT        reduce using rule 22 (Expr -> ID DEC .)


state 42

    (13) Input -> INPUT LCPARENT . String RCPARENT
    (30) String -> . QUOTE STRING QUOTE
    (31) String -> .

    QUOTE           shift and go to state 27
    RCPARENT        reduce using rule 31 (String -> .)

    String                         shift and go to state 51

state 43

    (16) Expr -> Expr SUM Expr .
    (16) Expr -> Expr . SUM Expr
    (17) Expr -> Expr . SUB Expr
    (18) Expr -> Expr . MULT Expr
    (19) Expr -> Expr . DIV Expr
    (20) Expr -> Expr . MOD Expr

    SUM             reduce using rule 16 (Expr -> Expr SUM Expr .)
    SUB             reduce using rule 16 (Expr -> Expr SUM Expr .)
    MOD             reduce using rule 16 (Expr -> Expr SUM Expr .)
    RCPARENT        reduce using rule 16 (Expr -> Expr SUM Expr .)
    MULT            shift and go to state 36
    DIV             shift and go to state 37

  ! MULT            [ reduce using rule 16 (Expr -> Expr SUM Expr .) ]
  ! DIV             [ reduce using rule 16 (Expr -> Expr SUM Expr .) ]
  ! SUM             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 38 ]


state 44

    (14) Expr -> Var .

    SUM             reduce using rule 14 (Expr -> Var .)
    SUB             reduce using rule 14 (Expr -> Var .)
    MULT            reduce using rule 14 (Expr -> Var .)
    DIV             reduce using rule 14 (Expr -> Var .)
    MOD             reduce using rule 14 (Expr -> Var .)
    RCPARENT        reduce using rule 14 (Expr -> Var .)


state 45

    (21) Expr -> ID . INC
    (22) Expr -> ID . DEC
    (29) Var -> ID .

    INC             shift and go to state 40
    DEC             shift and go to state 41
    SUM             reduce using rule 29 (Var -> ID .)
    SUB             reduce using rule 29 (Var -> ID .)
    MULT            reduce using rule 29 (Var -> ID .)
    DIV             reduce using rule 29 (Var -> ID .)
    MOD             reduce using rule 29 (Var -> ID .)
    RCPARENT        reduce using rule 29 (Var -> ID .)


state 46

    (17) Expr -> Expr SUB Expr .
    (16) Expr -> Expr . SUM Expr
    (17) Expr -> Expr . SUB Expr
    (18) Expr -> Expr . MULT Expr
    (19) Expr -> Expr . DIV Expr
    (20) Expr -> Expr . MOD Expr

    SUM             reduce using rule 17 (Expr -> Expr SUB Expr .)
    SUB             reduce using rule 17 (Expr -> Expr SUB Expr .)
    MOD             reduce using rule 17 (Expr -> Expr SUB Expr .)
    RCPARENT        reduce using rule 17 (Expr -> Expr SUB Expr .)
    MULT            shift and go to state 36
    DIV             shift and go to state 37

  ! MULT            [ reduce using rule 17 (Expr -> Expr SUB Expr .) ]
  ! DIV             [ reduce using rule 17 (Expr -> Expr SUB Expr .) ]
  ! SUM             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 38 ]


state 47

    (18) Expr -> Expr MULT Expr .
    (16) Expr -> Expr . SUM Expr
    (17) Expr -> Expr . SUB Expr
    (18) Expr -> Expr . MULT Expr
    (19) Expr -> Expr . DIV Expr
    (20) Expr -> Expr . MOD Expr

    SUM             reduce using rule 18 (Expr -> Expr MULT Expr .)
    SUB             reduce using rule 18 (Expr -> Expr MULT Expr .)
    MULT            reduce using rule 18 (Expr -> Expr MULT Expr .)
    DIV             reduce using rule 18 (Expr -> Expr MULT Expr .)
    MOD             reduce using rule 18 (Expr -> Expr MULT Expr .)
    RCPARENT        reduce using rule 18 (Expr -> Expr MULT Expr .)

  ! SUM             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]
  ! MULT            [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]


state 48

    (19) Expr -> Expr DIV Expr .
    (16) Expr -> Expr . SUM Expr
    (17) Expr -> Expr . SUB Expr
    (18) Expr -> Expr . MULT Expr
    (19) Expr -> Expr . DIV Expr
    (20) Expr -> Expr . MOD Expr

    SUM             reduce using rule 19 (Expr -> Expr DIV Expr .)
    SUB             reduce using rule 19 (Expr -> Expr DIV Expr .)
    MULT            reduce using rule 19 (Expr -> Expr DIV Expr .)
    DIV             reduce using rule 19 (Expr -> Expr DIV Expr .)
    MOD             reduce using rule 19 (Expr -> Expr DIV Expr .)
    RCPARENT        reduce using rule 19 (Expr -> Expr DIV Expr .)

  ! SUM             [ shift and go to state 34 ]
  ! SUB             [ shift and go to state 35 ]
  ! MULT            [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]
  ! MOD             [ shift and go to state 38 ]


state 49

    (20) Expr -> Expr MOD Expr .
    (16) Expr -> Expr . SUM Expr
    (17) Expr -> Expr . SUB Expr
    (18) Expr -> Expr . MULT Expr
    (19) Expr -> Expr . DIV Expr
    (20) Expr -> Expr . MOD Expr

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    RCPARENT        reduce using rule 20 (Expr -> Expr MOD Expr .)
    SUM             shift and go to state 34
    SUB             shift and go to state 35
    MULT            shift and go to state 36
    DIV             shift and go to state 37
    MOD             shift and go to state 38

  ! SUM             [ reduce using rule 20 (Expr -> Expr MOD Expr .) ]
  ! SUB             [ reduce using rule 20 (Expr -> Expr MOD Expr .) ]
  ! MULT            [ reduce using rule 20 (Expr -> Expr MOD Expr .) ]
  ! DIV             [ reduce using rule 20 (Expr -> Expr MOD Expr .) ]
  ! MOD             [ reduce using rule 20 (Expr -> Expr MOD Expr .) ]


state 50

    (30) String -> QUOTE STRING QUOTE .

    RCPARENT        reduce using rule 30 (String -> QUOTE STRING QUOTE .)


state 51

    (13) Input -> INPUT LCPARENT String . RCPARENT

    RCPARENT        shift and go to state 52


state 52

    (13) Input -> INPUT LCPARENT String RCPARENT .

    NEWLINE         reduce using rule 13 (Input -> INPUT LCPARENT String RCPARENT .)
    INTDec          reduce using rule 13 (Input -> INPUT LCPARENT String RCPARENT .)
    PRINT           reduce using rule 13 (Input -> INPUT LCPARENT String RCPARENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 49 resolved as shift
WARNING: shift/reduce conflict for SUB in state 49 resolved as shift
WARNING: shift/reduce conflict for MULT in state 49 resolved as shift
WARNING: shift/reduce conflict for DIV in state 49 resolved as shift
WARNING: shift/reduce conflict for MOD in state 49 resolved as shift
WARNING: reduce/reduce conflict in state 25 resolved using rule (Expr -> Var)
WARNING: rejected rule (Argument -> Var) in state 25
WARNING: Rule (Argument -> Var) is never reduced
