Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    DEC
    DIV
    DO
    ELIF
    ELSE
    EQUIV
    GEQ
    GT
    IF
    INC
    LCPARENT
    LEQ
    LSQBRACKET
    LT
    MOD
    MULT
    OR
    RCPARENT
    RSQBRACKET
    SUB
    SUM
    WHILE

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> Decls
Rule 2     Decls -> Decl
Rule 3     Decls -> Decls Decl
Rule 4     Decl -> INTDec nomeVar ATRIB NUM
Rule 5     nomeVar -> ID

Terminals, with rules where they appear

AND                  : 
ATRIB                : 4
DEC                  : 
DIV                  : 
DO                   : 
ELIF                 : 
ELSE                 : 
EQUIV                : 
GEQ                  : 
GT                   : 
ID                   : 5
IF                   : 
INC                  : 
INTDec               : 4
LCPARENT             : 
LEQ                  : 
LSQBRACKET           : 
LT                   : 
MOD                  : 
MULT                 : 
NUM                  : 4
OR                   : 
RCPARENT             : 
RSQBRACKET           : 
SUB                  : 
SUM                  : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

Decl                 : 2 3
Decls                : 1 3
Programa             : 0
nomeVar              : 4

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . Decls
    (2) Decls -> . Decl
    (3) Decls -> . Decls Decl
    (4) Decl -> . INTDec nomeVar ATRIB NUM

    INTDec          shift and go to state 4

    Programa                       shift and go to state 1
    Decls                          shift and go to state 2
    Decl                           shift and go to state 3

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> Decls .
    (3) Decls -> Decls . Decl
    (4) Decl -> . INTDec nomeVar ATRIB NUM

    $end            reduce using rule 1 (Programa -> Decls .)
    INTDec          shift and go to state 4

    Decl                           shift and go to state 5

state 3

    (2) Decls -> Decl .

    INTDec          reduce using rule 2 (Decls -> Decl .)
    $end            reduce using rule 2 (Decls -> Decl .)


state 4

    (4) Decl -> INTDec . nomeVar ATRIB NUM
    (5) nomeVar -> . ID

    ID              shift and go to state 7

    nomeVar                        shift and go to state 6

state 5

    (3) Decls -> Decls Decl .

    INTDec          reduce using rule 3 (Decls -> Decls Decl .)
    $end            reduce using rule 3 (Decls -> Decls Decl .)


state 6

    (4) Decl -> INTDec nomeVar . ATRIB NUM

    ATRIB           shift and go to state 8


state 7

    (5) nomeVar -> ID .

    ATRIB           reduce using rule 5 (nomeVar -> ID .)


state 8

    (4) Decl -> INTDec nomeVar ATRIB . NUM

    NUM             shift and go to state 9


state 9

    (4) Decl -> INTDec nomeVar ATRIB NUM .

    INTDec          reduce using rule 4 (Decl -> INTDec nomeVar ATRIB NUM .)
    $end            reduce using rule 4 (Decl -> INTDec nomeVar ATRIB NUM .)

