
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMSUBleftMULTDIVAND ATRIB COLON DEC DEDENT DIV DO ELIF ELSE ENDMARKER EQUIV GEQ GT ID IF INC INDENT INPUT INTDec LCPARENT LEQ LSQBRACKET LT MOD MULT NEWLINE NUM OR PRINT QUOTE RCPARENT RSQBRACKET STRING SUB SUM WHILE WSProgramaInit : Programa ENDMARKERPrograma : CorpoPrograma : Decls CorpoCorpo : Proc NewlineCorpo : Corpo Proc NewlineDecls : Decl NewlineDecls : Decls Decl NewlineNewline : Newline : NEWLINEDecl : INTDec IDDecl : INTDec ID ATRIB NUMDecl : INTDec ID ATRIB InputInput : INPUT LCPARENT String RCPARENTExpr : VarExpr : NUMExpr : Expr SUM ExprExpr : Expr  SUB ExprExpr : Expr  MULT ExprExpr : Expr  DIV ExprExpr : Expr MOD ExprExpr : ID INCExpr : ID DECProc : PrintPrint : NonFormattedNonFormatted : PRINT LCPARENT Argument RCPARENTArgument : StringArgument : VarArgument : ExprVar : IDString : QUOTE STRING QUOTEString :  '
    
_lr_action_items = {'INTDec':([0,4,6,14,16,17,18,21,30,31,52,],[8,8,-8,-8,-9,-6,-10,-7,-11,-12,-13,]),'PRINT':([0,3,4,5,6,7,9,12,13,14,15,16,17,18,20,21,30,31,33,52,],[10,10,10,-8,-8,-23,-24,-8,10,-8,-4,-9,-6,-10,-5,-7,-11,-12,-25,-13,]),'$end':([1,11,],[0,-1,]),'ENDMARKER':([2,3,5,7,9,12,13,15,16,20,33,],[11,-2,-8,-23,-24,-8,-3,-4,-9,-5,-25,]),'NEWLINE':([5,6,7,9,12,14,18,30,31,33,52,],[16,16,-23,-24,16,16,-10,-11,-12,-25,-13,]),'ID':([8,19,34,35,36,37,38,],[18,28,45,45,45,45,45,]),'LCPARENT':([10,32,],[19,42,]),'ATRIB':([18,],[22,]),'QUOTE':([19,39,42,],[27,50,27,]),'RCPARENT':([19,23,24,25,26,28,29,40,41,42,43,44,45,46,47,48,49,50,51,],[-31,33,-26,-14,-28,-29,-15,-21,-22,-31,-16,-14,-29,-17,-18,-19,-20,-30,52,]),'NUM':([19,22,34,35,36,37,38,],[29,30,29,29,29,29,29,]),'INPUT':([22,],[32,]),'SUM':([25,26,28,29,40,41,43,44,45,46,47,48,49,],[-14,34,-29,-15,-21,-22,-16,-14,-29,-17,-18,-19,34,]),'SUB':([25,26,28,29,40,41,43,44,45,46,47,48,49,],[-14,35,-29,-15,-21,-22,-16,-14,-29,-17,-18,-19,35,]),'MULT':([25,26,28,29,40,41,43,44,45,46,47,48,49,],[-14,36,-29,-15,-21,-22,36,-14,-29,36,-18,-19,36,]),'DIV':([25,26,28,29,40,41,43,44,45,46,47,48,49,],[-14,37,-29,-15,-21,-22,37,-14,-29,37,-18,-19,37,]),'MOD':([25,26,28,29,40,41,43,44,45,46,47,48,49,],[-14,38,-29,-15,-21,-22,-16,-14,-29,-17,-18,-19,38,]),'STRING':([27,],[39,]),'INC':([28,45,],[40,40,]),'DEC':([28,45,],[41,41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ProgramaInit':([0,],[1,]),'Programa':([0,],[2,]),'Corpo':([0,4,],[3,13,]),'Decls':([0,],[4,]),'Proc':([0,3,4,13,],[5,12,5,12,]),'Decl':([0,4,],[6,14,]),'Print':([0,3,4,13,],[7,7,7,7,]),'NonFormatted':([0,3,4,13,],[9,9,9,9,]),'Newline':([5,6,12,14,],[15,17,20,21,]),'Argument':([19,],[23,]),'String':([19,42,],[24,51,]),'Var':([19,34,35,36,37,38,],[25,44,44,44,44,44,]),'Expr':([19,34,35,36,37,38,],[26,43,46,47,48,49,]),'Input':([22,],[31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ProgramaInit","S'",1,None,None,None),
  ('ProgramaInit -> Programa ENDMARKER','ProgramaInit',2,'p_Programa_Init','yacc.py',6),
  ('Programa -> Corpo','Programa',1,'p_Programa','yacc.py',10),
  ('Programa -> Decls Corpo','Programa',2,'p_Programa_Decls','yacc.py',15),
  ('Corpo -> Proc Newline','Corpo',2,'p_Corpo','yacc.py',20),
  ('Corpo -> Corpo Proc Newline','Corpo',3,'p_Corpo_Proc','yacc.py',24),
  ('Decls -> Decl Newline','Decls',2,'p_Decls','yacc.py',28),
  ('Decls -> Decls Decl Newline','Decls',3,'p_Decls_Recursiva','yacc.py',32),
  ('Newline -> <empty>','Newline',0,'p_Newline_Empty','yacc.py',36),
  ('Newline -> NEWLINE','Newline',1,'p_Newline','yacc.py',40),
  ('Decl -> INTDec ID','Decl',2,'p_Decl_Int','yacc.py',45),
  ('Decl -> INTDec ID ATRIB NUM','Decl',4,'p_Decl_Int_Val','yacc.py',56),
  ('Decl -> INTDec ID ATRIB Input','Decl',4,'p_Decl_Int_Input','yacc.py',67),
  ('Input -> INPUT LCPARENT String RCPARENT','Input',4,'p_Input','yacc.py',78),
  ('Expr -> Var','Expr',1,'p_Expr_Var','yacc.py',95),
  ('Expr -> NUM','Expr',1,'p_Expr_Num','yacc.py',99),
  ('Expr -> Expr SUM Expr','Expr',3,'p_Expr_Soma','yacc.py',103),
  ('Expr -> Expr SUB Expr','Expr',3,'p_Expr_Sub','yacc.py',107),
  ('Expr -> Expr MULT Expr','Expr',3,'p_Expr_Mult','yacc.py',111),
  ('Expr -> Expr DIV Expr','Expr',3,'p_Expr_Div','yacc.py',115),
  ('Expr -> Expr MOD Expr','Expr',3,'p_Expr_Mod','yacc.py',119),
  ('Expr -> ID INC','Expr',2,'p_Expr_Inc','yacc.py',123),
  ('Expr -> ID DEC','Expr',2,'p_Expr_Dec','yacc.py',127),
  ('Proc -> Print','Proc',1,'p_Atrib_Print','yacc.py',141),
  ('Print -> NonFormatted','Print',1,'p_Print_NonFormatted','yacc.py',145),
  ('NonFormatted -> PRINT LCPARENT Argument RCPARENT','NonFormatted',4,'p_NonFormatted','yacc.py',149),
  ('Argument -> String','Argument',1,'p_Argument_String','yacc.py',153),
  ('Argument -> Var','Argument',1,'p_Argument_Var','yacc.py',157),
  ('Argument -> Expr','Argument',1,'p_Argument_Expr','yacc.py',161),
  ('Var -> ID','Var',1,'p_Var','yacc.py',166),
  ('String -> QUOTE STRING QUOTE','String',3,'p_String','yacc.py',179),
  ('String -> <empty>','String',0,'p_String_Empty','yacc.py',184),
]
